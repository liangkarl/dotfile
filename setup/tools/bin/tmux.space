#!/usr/bin/env bash
# NAME:
# $0
#
# DESCRIPTION:
# $0 is used for attaching specific tmux entry, configed by ts.conf
#
# SYNOPSIS:
# $0 [OPTIONS]
#
# OPTIONS:
#   '': enter entry
#   -d: delete entrys
#   -e: edit entry configuration
#   -h: help

# this is for setting up a workspace in tmux
# TARGET_DIR=$(fasd -d $@)
TARGET_NAME="$1"

lib.load menu
lib.load devel

edit() {
	[[ ! -d "$CONFDIR" ]] && mkdir $CONFDIR

	if [[ ! -e "$CONFDIR/${1}.yml" ]]; then
		smug print |
			sed -e '/layout/d' -e '/panes/d' -e '/- commands/d' \
			> $CONFDIR/${1}.yml
	fi

	smug edit $1
}

get_entry() {
	menu.title "$title"
	menu.opts $(smug list)
	menu.run

	msg.dbg "idx: $(menu.ans_idx)"
	msg.dbg "opt: $(menu.ans_opt)"
}

enter() {
	smug start $1 -a
}

# delete entry
remove() {
	smug stop $1
	exit
}

# set -xv
set -eE

CONFDIR="$XDG_CONFIG_HOME/smug"
title="select a profile:"

set -- $(getopt ":deh" $*)

while [[ $# -ne 0 ]]; do
	case $1 in
		-d) remove=y;
			title="remove a profile:";;
		-e) edit=y;
			title="edit or add a profile:";;
		-h) cmd.help 0;;
		--) enter=y;;
		*) cmd.help 1;;
	esac
	shift
done

get_entry
if [[ $(menu.ans_idx) -lt 0 ]]; then
	msg.err "no configuration selected"
	exit 1
fi
entry="$(menu.ans_opt)"

[[ "$edit" == y ]] && edit "$entry"

[[ "$remove" == y ]] && remove "$entry"

[[ "$enter" == y ]] && enter "$entry"
