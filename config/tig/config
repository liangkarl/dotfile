#
# The config is focused on the TUI based git tool,
# not full functional support of git.
#
# Config reference
# https://github.com/jonas/tig/blob/master/tigrc
# https://jonas.github.io/tig/doc/tigrc.5.html

# used for boosting loading speed
set commit-order = default
set main-view-commit-title-graph = v1

# Addjust the column width of author
set main-view = line-number:no,interval=5 \
                date:custom,format="%m/%d/%y %H:%M" date:relative-compact \
                author:full,width=15 id:yes \
                commit-title:yes,graph,refs,overflow=no
set blame-view = id:yes,color date:relative-compact \
                 file-name:no author:abbreviated \
                 line-number:yes,interval=1 text
set refs-view = line-number:no \
                date:custom,format="%m/%d/%y %H:%M" date:relative-compact \
				ref id:yes,color commit-title
set tree-view = line-number:no,interval=5 id:yes,color \
                mode author:full file-size \
                date:custom,format="%m/%d/%y %H:%M" date:relative-compact \
                file-name

# View operation {
bind generic f none
bind generic g none
bind generic y none
bind generic r none
bind generic l none
bind generic L none
bind generic d none
bind generic m none
bind generic c none
bind generic s none
bind generic S none
bind generic , none
bind generic p none
bind generic q none

bind generic 1 view-main
bind generic ,l view-log
bind generic 2 view-refs
bind generic 3 view-status
bind generic ,d view-diff
bind generic ,s view-stage
bind generic ,p view-pager
bind generic 4 view-stash
bind generic 5 view-reflog
bind generic b view-blame
bind generic ,fd view-blob
bind generic ,rg view-grep
bind generic h view-help
bind generic M maximize
bind generic q view-close-no-quit
bind generic Q quit
# }

# Misc {
bind generic G none

bind generic gg move-first-line
bind generic G move-last-line
bind generic pwd<ENTER> +git rev-parse --show-toplevel
bind generic dc<ENTER> !git diff --check
# }

# Stage {
bind stage A stage-update-part
bind stage a stage-update-line
bind stage c<ENTER> !git commit
bind stage ca<ENTER> +?git commit --amend --no-edit
bind stage caa<ENTER> ?git commit --amend
# don't bind 'none' since 'none' would override 'view-xxxx'
bind stage 1 view-main
bind stage 2 view-refs
# }

# Status {
bind status C none
bind status ! none
bind status c<ENTER> !git commit
bind status caa<ENTER> +?git commit --amend --no-edit
bind status ca<ENTER> ?git commit --amend
bind status co<ENTER> +?git checkout %(file)
bind status rm<ENTER> +?git clean -f %(file)
bind status y<ENTER> +?git stash save "%(prompt new stash: )"
# }

# Reference {
bind refs fa<ENTER> +git fetch --all
bind refs m<ENTER> ?git merge %(ref)
bind refs rb<ENTER> ?git rebase %(ref)
bind refs co<ENTER> +git checkout %(ref)
bind refs cd<ENTER> +git checkout -d %(ref)
# only available in FF
bind refs ps<ENTER> +?git fetch . HEAD:%(ref)

bind refs C none
bind refs ! none
bind refs !m<ENTER> +git merge --abort
bind refs !rb<ENTER> +git rebase --abort
bind refs !at<ENTER> +?git tag -d %(tag)
bind refs !ab<ENTER> +?git branch -D %(branch)
# }

# Main {
set main-options = -n 20000

bind main c<ENTER> !git commit
bind main caa<ENTER> +?sh -c 'git commit --amend --no-edit &> /dev/null && echo \'success\''
bind main ca<ENTER> ?git commit --amend
bind main at<ENTER> +git tag "%(prompt new tag: )" %(commit)
bind main ab<ENTER> +git branch "%(prompt new branch: )" %(commit)
bind main co<ENTER> ?git checkout %(commit)
bind main rs<ENTER> +?git reset --hard %(commit)
bind main rv<ENTER> +git revert --no-edit %(commit)
bind main rbi<ENTER> ?git rebase -i %(commit)
bind main cp<ENTER> +git cherry-pick -s %(commit)
bind main fp<ENTER> ?git format-patch -k --binary --histogram -1 -o . %(commit)

bind main G move-last-line
bind main C none
bind main ! none
bind main !rb<ENTER> +git rebase --abort
bind main !rv<ENTER> +git revert --abort
bind main !cp<ENTER> +git cherry-pick --abort
bind main !c<ENTER> +?git reset %(commit)
bind main !at<ENTER> +?git tag -d %(tag)
bind main !ab<ENTER> +?git branch -D %(branch)
# }

# Reflog {
bind reflog C none
bind reflog ! none
bind reflog !cp<ENTER> +git cherry-pick --abort
bind reflog rs<ENTER> +?git reset --hard %(commit)
bind reflog cp<ENTER> +?git cherry-pick -s %(commit)
bind reflog co<ENTER> ?git checkout %(commit)
# }
