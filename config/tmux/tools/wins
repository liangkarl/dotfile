#!/usr/bin/env bash

# $0 config-name-with-abs-path
# This tool would create new windows in current tmux session

source $(mylib file)

# set -x
set -eE

usage() {
	n="$(basename $0)"
	cat <<-EOF
	NAME:
	$n - create window tabs according to wins.conf

	OPTIONS:
	-h: print help
	-c/-C: create new windows in tmux following the config
	-t: assign win name
	-p: assign path
	EOF
	exit $1
}

# $0 title path cmd
new_win() {
	local cmd

	cmd="new-window -d -n $1"
	[[ ! -z "$name" ]] && cmd+=" -t $name"

	if [[ ! -z "$2" ]]; then
		cmd+=" -c $2"
	fi
	cmd+="\; "

	if (( $# > 2 )); then
		shift 2
		eval tmux $cmd send-keys "'$@'" C-m \;
	else
		eval tmux $cmd
	fi
}

(( $# == 0 )) && usage 3

while (( $# > 0 )); do
	case "$1" in
		-h)
			usage 0
			;;
		-C)
			shift
			CONF="$(find_file_path $1)"
			;;
		-c)
			shift
			CONF="$1"
			;;
		-t)
			shift
			name="$1"
			;;
		-p)
			shift
			path="$1"
			;;
		*)
			usage 2
	esac
	shift
done

[[ -z "$CONF" ]] && usage 1

if [[ ! -e "$CONF" ]]; then
	new_win "$name" "$path" "# no $CONF found"
	exit
fi

declare -A win
while IFS= read -r line; do
	eval $line
	[[ -z "${win[name]}" ]] && break
	[[ ! -d "${win[cwd]}" ]] && win[cwd]="$HOME"

	new_win "${win[name]}" "${win[path]}" "${win[cmd]}"
done < "$CONF" 2> /dev/null
