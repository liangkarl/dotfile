#!/usr/bin/env bash

slash_end() {
    [[ "$@" == */ ]]
    return $?
}
export -f slash_end

full_path() {
    echo $(readlink -e "$@")
}
export -f full_path

# usage:
#   $0 file.name /path/to/dir
find_path() {
	local dir file

	file="$1"
	[[ -z "$file" ]] && return 1

	dir="$(full_path $2)"
	[[ -z "$dir" ]] && return 2

	while [[ "$dir" != '/' ]]; do
		[[ -e "${dir}/${file}" ]] && {
			echo ${dir}/${file}
			return 0
		}
		dir="$(dirname $dir)"
	done

	[[ -e ${dir}/${file} ]] && {
		echo ${dir}/${file}
		return 0
	}

	return 3
}
export -f find_path

# usage:
#   $0 /path/to/file.name => search file.name from assigned wd
#	$0 file.name => search file.name from cwd
find_file_path() {
	find_path "$(basename $1)" "$(dirname $1)"
	return $?
}
export -f find_file_path

# call the func to get the file path inside the sourced script
source_file_path() {
	echo "$(readlink -e "$(dirname ${BASH_SOURCE[0]})")"
}
export -f source_file_path
