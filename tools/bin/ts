#!/bin/bash

# this is for setting up a workspace in tmux

# TARGET_DIR=$(fasd -d $@)
TARGET_NAME="$1"

# project.conf:
# project='aaa'
# codebase=('code_0','code_1')

search_config() {
	local dir conf

	dir="$1"
	if [[ ! -d "$dir" ]]; then
		echo ""
		return 110
	fi

	conf='project.conf'
	while [[ "$dir" != '/' ]]; do
		if [[ -f "${dir}/${conf}" ]]; then
			echo ${dir}/${conf}
			return 0
		fi

		dir=$(readlink -e ${dir}/.. 2>&-)
	done

	echo ""
	return 128
}

parse() {
	local sess name argv cmd path
	local conf

	cmd=''
	argv=''
	sess=($(tmux ls -F'#S' 2>&-))
	if (( $# == 0 )); then
		if (( ${#sess[@]} == 0 )); then
			name=$(date +%x)
			cmd='tmux new'
			argv="-d -s $name -c $HOME"
		fi
	else
		path="$(readlink -e "$1" 2>&-)"
		conf="$(search_config $path)"
		if [[ ! -z "$conf" ]]; then
			# don't mess up project.conf due to no check
			source $conf
			name="$project>$(basename $TARGET_NAME)"	# Assume name a path of dir
		else
			name="$(basename $TARGET_NAME)"	# Assume name a path of dir
		fi

		# NOTE:
		# attaching existed session is removed
		# for now, always create new session
		index=1
		while tmux has-session -t $name 2>&-; do
			name="${name}#${index}"
			$((index++))
		done

		cmd='tmux new'
		argv="-d -s $name -c $path"
	fi
	$cmd $argv

	# check inside or outside tmux
	if [[ "$TMUX" == '' ]]; then # outside
		cmd='tmux attach'
	else # inside
		TMUX=''
		cmd="tmux switch-client"
	fi
	if [[ "$name" != '' ]]; then
		argv="-t $name"
	fi
	$cmd $argv

	return $?
}

parse $@
