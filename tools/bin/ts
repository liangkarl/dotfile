#!/usr/bin/env bash

# this is for setting up a workspace in tmux

# TARGET_DIR=$(fasd -d $@)
TARGET_NAME="$1"

#
# ts.conf:
#
# # space+=([name]='position')
# space+=([j90]='~/path/to/j90/project.conf/location')
#

#
# project.conf:
#
# # project name
# project='aaa'
#
# # windows setup:
# # win_1=('name' 'directory' 'command')
# win_1=('make' 'code.0' '')
# win_2=('kernel' 'path/to/kernel' '')
# win_3=('device' 'path/to/device' '')
# win_4=('lk' 'path/to/lk' '')
#

import-script file
import-script io
import-script sys

usage() {
	local n

	n=$(basename $0)
	cat <<-EOF
	$n -p project-name
	$n -d delete-session
	$n -l
	$n -e
EOF

	exit $1
}

check_session() {
	local i num
	local name state pos path

	# import $project
	. $CONF

	# list session
	num=1
	OPTS=()
	for i in "${!space[@]}"; do
		name=$i
		pos="${space[$i]}"
		state='none'

		if tmux has -t "$name" 2> /dev/null; then
			state='exist'
		fi
		echo "$num) ${name} ${state} ${path}"
		OPTS+=("$name,$state")
		((num++))
	done
}

switch_session() {
	local cmd

	if [[ "$TMUX" == '' ]]; then # outside
		cmd='tmux attach'
	else # inside
		TMUX=''
		cmd="tmux switch-client"
	fi

	eval $cmd $@
	exit 0
}

enter_session() {
	local pname ppath pstate
	local num

	# select project number
	read -p "select a project num to open: " num

	pname=${OPTS[$((--num))]%,*}
	[[ -z "${pname}" ]] && exit_msg 2 "invalid number of projects"

	ppath="${space[$pname]}"
	pstate="${OPTS[$num]##*,}"

	# if project not exist
	if [[ $pstate == 'none' ]]; then
		# FIXME: these operation should be moved to 'ws'
		if [[ "$HAS_WS" == y ]]; then
			ws $ppath
		else
			# expand bash macros
			eval tmux new -d -s $pname -c $ppath
		fi
	fi

	switch_session -t $pname
}

delete_session() {
	local pname ppath pstate
	local num

	# select project number
	read -p "select a project num to remove: " num

	pname=${OPTS[$((--num))]%,*}
	[[ -z "${pname}" ]] && exit_msg 2 "invalid number of projects"

	ppath="${space[$pname]}"
	pstate="${OPTS[$num]##*,}"

	# if project exist
	if [[ $pstate == 'exist' ]]; then
		# delelte session
		tmux kill-session -t $pname
	fi
}

edit_conf() {
	local dir confg

	dir=$(dirname $CONF)
	[[ ! -e $dir ]] && mkdir -p $dir

	if [[ ! -e $CONF ]]; then
		cat > $CONF <<-EOF
		# ts.conf example:
		#
		# space+=([j90]='~/path/to/j90/project.conf/place')
		EOF
	fi

	vim $CONF
}

declare -A space
CONF="$XDG_CONFIG_HOME/tmux/plugin/ts/ts.conf"
PROJECT_LIST=()

(( $# == 0 )) && usage 1

case $1 in
	-p)
		LIST_PROJ=y
		PROJ=y
		;;
	-d)
		LIST_PROJ=y
		DEL_PROJ=y
		;;
	-l)
		LIST_PROJ=y
		;;
	-e)
		EDIT_PROJ_CONF=y
		;;
	*)
		usage 2
		;;
esac

[[ "$EDIT_PROJ_CONF" == y ]] && edit_conf

# list project name status
[[ "$LIST_PROJ" == y ]] && check_session

has_cmd ws && HAS_WS=y

[[ "$PROJ" == y ]] && enter_session

[[ "$DEL_PROJ" == y ]] && delete_session
