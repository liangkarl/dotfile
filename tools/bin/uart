#!/usr/bin/env bash
#
# This tool based on plink.exe, a CLI version of putty
#

source $(mylib io)
source $(mylib menu)

shopt -s extglob

usage() {
	local name="$(basename $0)"

	cat <<-EOF
	name:
	    $name - A simple CLI serial console based on plink/putty

	usage:
	    $name [-lob] [-n]

	options:
	    -l: list available COM port
	    -o: setup serial config
	        eg, -o "br=115200;fc=N;db=8;sb=1;pa=n"
	    -b: select supported serial console .exe
	    -n: 'n' is the port number
	EOF

	exit $1
}

list_comport() {
	local ls
	if [[ "$bin" == 'ss.exe' ]]; then
		eval $bin -list
	else
		ls="Get-CimInstance -Class Win32_SerialPort | Select-Object Description, DeviceID"
		powershell.exe -Command $ls
	fi
}

ss_conf() {
	local pa
	declare -A pa_map

	pa_map=(
		[odd]="ODD"
		[even]="EVEN"
		[none]="NONE"
		[mark]='MARK'
		[space]='SPACE'
	)
	pa=${pa_map[$parity]}

	echo -n "-com:${port} -baud:${baudrate} -parity:${pa} "
	echo -n "-databits:${data_bits} -stopbits:${stop_bits} "
	echo -n "-log:$(wslpath -m $log)"
}

plink_conf() {
	local pa fc
	declare -A pa_map fc_map

	pa_map=(
		[none]='n'
		[odd]='o'
		[even]='e'
		[mark]='m'
		[space]='s'
	)
	fc_map=(
		[none]='N'
		[XON_OFF]='X'
		[RST_CTS]='R'
		[DSR_STR]='D'
	)
	pa=${pa_map[$parity]}
	fc=${fc_map[$flow_control]}

	echo -n "-v -serial COM${port} "
	echo -n "-sercfg ${baudrate},${data_bits},${pa},${stop_bits},${fc}"
}

# download from https://www.putty.org/
plink="plink.exe"
putty="putty.exe"

# download from https://github.com/fasteddy516/SimplySerial
ss="ss.exe"

bin="$ss"

# default config:
baudrate=921600
flow_control=none
parity=none
data_bits=8
stop_bits=1
log=uart.$PPID.log
conf=~/.uart.conf

(( $# == 0 )) && usage 2

[[ -z "$WSL_DISTRO_NAME" ]] && exit_msg 3 "only support WSL environment for now."

# TODO: source project.conf to get project specific setup
[[ -e $conf ]] && source $conf

while (( $# != 0 )); do
	case $1 in
		-o)
			config_uart=y
			;;
		-l)
			list_port=y
			;;
		-b)
			select_exe=y
			;;
		-+([0-9]))
			port=${1#-}
			;;
		*)
			usage 2
			;;
	esac
	shift
done

if [[ "$list_port" == y ]]; then
	list_comport
	exit
fi

if [[ "$select_exe" == y ]]; then
	menu_title "list supported .exe files"
	menu_prompt "select one to execute"
	menu_default 1
	menu $ss $plink $putty
	bin=$(menu_final)
fi

# TODO: these config should be collected into a external config file
if [[ "$config_uart" == y ]]; then
	menu_title 'list available config shortcuts'
	menu_prompt 'select quick config:'
	menu_default 1
	menu 'b921600' 'b115200'
	opt=$(menu_final)
	baudrate=${opt#b}
fi

# There must be an existed log file for ss.exe
touch $log
eval $bin $(${bin%%.exe}_conf)
