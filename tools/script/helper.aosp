#!/usr/bin/env bash

source $(mylib file)
__build_json='build.json'
__gen_cmddb="$(myscript gen_compile_commands.py)"
__command_db='compile_commands.json'

# $0 [kernel_dir]
gen_kernel_cmddb() {
    echo "generate compile commands db..."
    eval $__gen_cmddb -d "$1"
}

# $0 [kernel_dir] [kernel_obj_dir]
gen_aosp_kernel_cmddb() {
    local kernel_dir kernel_obj_dir

    kernel_dir="$(abs_path "$1")"
    kernel_obj_dir="$(abs_path "$2")"

    gen_kernel_cmddb $kernel_obj_dir

    echo "Link build dir."
    ln -svf $kernel_obj_dir ${kernel_dir}/build

    echo "copy commands db to $kernel_dir/${__command_db}"
    cp -f ${kernel_obj_dir}/${__command_db} $kernel_dir
}

# create a cmd_db here
# link_cmdb PLACE PROJECT_LIST
create_and_link_cmddb() {
    local cmddb_dir cmddb_json base_cmddb
    local wanted_place
    local dir

    cmddb_dir=("out/soong/development/ide/compdb"
            "out/development/ide/compdb")

    for dir in ${cmddb_dir[@]}; do
        if [[ -e $dir/$__command_db ]]; then
            cmddb_json="$dir/$__command_db"
        fi
    done

    if [[ -z $cmddb_json ]]; then
        echo "no available $__command_db"
        return 0
    fi

    # 1st stage
    # copy command DB
    base_cmddb='cmd-db'
    wanted_place="$(abs_path "$base_cmddb/$1")"
    if [[ ! -e $wanted_place ]]; then
        mkdir -p $wanted_place
    fi

    cp $cmddb_json $wanted_place
    echo "command database: $(ls $wanted_place)"

    # 2nd stage
    # create .ccls for projects
    shift
    if (( $# == 0 )); then
        return 0
    fi

    echo "create .ccls for $# project(s)"
    for dir in "$@"; do
        if [[ -e $dir ]]; then
            jo -p compilationDatabaseDirectory="$base_cmddb" > $dir/.ccls
        else
            echo "not found: $dir"
        fi
    done
    echo "done"

    return 0
}
