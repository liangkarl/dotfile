#
# The config is focused on the TUI based git tool,
# not full functional support of git.
#
# Config reference
# https://github.com/jonas/tig/blob/master/tigrc
# https://jonas.github.io/tig/doc/tigrc.5.html

# used for boosting loading speed
set commit-order = default
set main-options = -n 20000
set main-view-commit-title-graph = v1
set refresh-mode = after-command

# Addjust the column width of author
set main-view = line-number:no,interval=5 \
                date:custom,format="%m/%d/%y %H:%M" date:relative-compact \
                author:full,width=15 id:yes \
                commit-title:yes,graph,refs,overflow=no
set blame-view = id:yes,color date:relative-compact \
                 file-name:no author:abbreviated \
                 line-number:yes,interval=1 text
set refs-view = line-number:no \
                date:custom,format="%m/%d/%y %H:%M" date:relative-compact \
				ref id:yes,color commit-title
set tree-view = line-number:no,interval=5 id:yes,color \
                mode author:full file-size \
                date:custom,format="%m/%d/%y %H:%M" date:relative-compact \
                file-name

# Unbind keys {
bind generic f none
bind generic g none
bind generic y none
bind generic r none
bind generic l none
bind generic L none
bind generic d none
bind generic m none
bind generic s none
bind generic S none
bind generic , none
bind generic p none
bind generic q none
bind generic b none
bind generic o none
# }

# Views {
## Functional
bind generic v  none
bind generic v<Enter> view-main
bind generic vl view-log

bind main    ,  view-status
bind status  ,  view-stash
bind stash   ,  view-main
bind generic vs view-status
# No independent keybind to view-log

bind main    .  view-refs
bind refs    .  view-reflog
bind reflog  .  view-main
bind generic vr view-refs

bind refs    ,  view-status
bind status  .  view-refs

bind tree    ,  view-blob
bind blob    ,  view-blame
bind blame   ,  view-tree
bind generic vb view-blame
bind generic vf view-tree
# No independent keybind to view-blob

# don't bind 'none' since 'none' would override 'view-xxxx'
bind stage   ,  view-main
bind stage   .  view-refs

bind generic v/ view-grep
bind generic vh view-help
bind generic vm maximize

## Options
bind generic o  none
bind generic oo :toggle sort-order
bind generic os :toggle sort-field
bind generic on :toggle line-number
bind generic od :toggle date
bind generic oa :toggle author
bind generic oi :toggle id
bind generic og :toggle line-graphics
bind generic of :toggle file-name
bind generic oF :toggle file-filter
bind generic op :toggle ignore-space
bind generic ot :toggle commit-title-overflow
bind generic or :toggle commit-title-refs
# }

# Misc {
## Move light bar to top/button
bind generic g  none
bind generic gg move-first-line
bind generic G  move-last-line
bind main    G  move-last-line

bind generic l  enter
bind generic h  view-close-no-quit
bind generic q  view-close-no-quit
bind generic J  next
bind generic K  previous
bind generic Q  quit
bind generic <Ctrl-C> none

bind generic pwd      +git rev-parse --show-toplevel
# }

# Feature {
## Commit
bind generic c        none
bind main    c<ENTER> >git commit -v
bind main    ca       >?git commit -v --amend
bind main    cn       @?git commit --amend --no-edit
bind stage   c<ENTER> >git commit -v
bind stage   ca       >?git commit -v --amend
bind stage   cn       @?git commit --amend --no-edit
bind status  c<ENTER> >git commit -v
bind status  ca       >?git commit -v --amend
bind status  cn       @?git commit --amend --no-edit

## Stage/Unstage file
bind stage   f        @sh -c 'if git diff --cached --quiet %(file); then git add %(file); else git reset --quiet HEAD %(file); fi'
bind stage   F        @sh -c 'if git diff --cached --quiet; then git add -u; else git reset --quiet HEAD; fi'

## Add stash
bind generic a  none
bind main    ay @git stash save "%(prompt new stash: )"
bind stage   ay @git stash save "%(prompt new stash: )"
bind status  ay @git stash save "%(prompt new stash: )"

## Add/Del tag/branch
bind main   at @git tag "%(prompt new tag: )" %(commit)
bind reflog at @git tag "%(prompt new tag: )" %(commit)
bind main   dt @?git tag -d %(tag)
bind refs   dt @?git tag -d %(tag)

bind main   ab @git branch "%(prompt new branch: )" %(commit)
bind reflog ab @git branch "%(prompt new branch: )" %(commit)
bind main   db @?git branch -D %(branch)
bind refs   db @?git branch -D %(branch)

## Checkout
bind main   co @git checkout %(commit)
bind refs   co @git checkout %(ref)
bind refs   cd @git checkout -d %(ref)
bind reflog co @git checkout %(commit)

### Reset file
bind status co @?git checkout %(file)
bind stage  co @?git checkout %(file)

## Reset commits
bind generic r  none
bind main    rh @?git reset --hard %(commit)
bind reflog  rh @?git reset --hard %(commit)
bind diff    rh @?git reset --hard %(commit)
bind main    rs @?git reset %(commit)
bind reflog  rs @?git reset %(commit)
bind diff    rs @?git reset %(commit)
bind stage   rn @?git reset --hard HEAD
bind main    rn @?git reset --hard HEAD
bind main    rp @?git reset HEAD@{1}

## Cherry-pick
bind main   cp @sh -c 'git cherry-pick -s %(commit) || git cherry-pick --abort'
bind refs   cp @sh -c 'git cherry-pick -s %(commit) || git cherry-pick --abort'
bind reflog cp @sh -c 'git cherry-pick -s %(commit) || git cherry-pick --abort'

## Format patch
bind main   fp ?+git format-patch -k --binary --histogram -1 -o . %(commit)
bind main   fP ?+git format-patch -k --binary --histogram -o patchset %(commit)^
bind diff   fp ?+git format-patch -k --binary --histogram -1 -o . %(commit)
bind blame  fp ?+git format-patch -k --binary --histogram -1 -o . %(commit)
bind reflog fp ?+git format-patch -k --binary --histogram -1 -o . %(commit)
bind stage  fp ?@sh -c 'git diff -k --binary --histogram > ./$(date +%s.%H%M).diff'
# }

# Stage {
bind stage A stage-update-part
bind stage a stage-update-line
# }

# Status {
bind status C none
bind status ! none
bind status d @?rm -rf %(file)
bind status D @?git clean -fd
# }

# Reference {
bind refs C none
bind refs ! none

bind refs fa       @git fetch --all
bind refs m<ENTER> @sh -c 'git merge  %(ref) || git merge  --abort'
bind refs rb       @sh-c 'git rebase %(ref) || git rebase --abort'
# only available in FF
bind refs ps +?git fetch . HEAD:%(ref)
# }

# Main {
bind main C none
bind main ! none

bind main rv @sh -c 'git revert --no-edit %(commit) || git revert --abort'
bind main rb >?git rebase -i %(commit)
bind main ra >?git rebase --abort
bind main D  @?git clean -fd
# }

# Reflog {
bind reflog C none
bind reflog ! none
# }
