#!/usr/bin/env bash

# this is for setting up a workspace in tmux

# TARGET_DIR=$(fasd -d $@)
TARGET_NAME="$1"

source $(mylib file)
source $(mylib io)
source $(mylib sys)
source $(mylib menu)

init() {
	if has_cmd fzf; then
		fuzzy_finder="fzf --print-query"
	elif has_cmd fzy; then
		fuzzy_finder=fzy
	else
		pr_err "no available fuzzy_finder"
		exit 1
	fi
}

usage() {
	local n

	n=$(basename $0)
	cat <<-EOF
	DESCRIPTION:
	$n is used for attaching specific tmux session, configed by ts.conf

	SYNOPSIS:
	$n [OPTIONS]

	OPTIONS:
	  '': enter session
	  -d: delete sessions
	  -e: edit session configuration
	  -h: help
	EOF

	exit $1
}

edit_conf() {
	[[ ! -d "$CONFDIR" ]] && mkdir $CONFDIR

	if [[ ! -e "$CONFDIR/${1}.yml" ]]; then
		smug print |
			sed -e '/layout/d' -e '/panes/d' -e '/- commands/d' \
			> $CONFDIR/${1}.yml
	fi

	smug edit $1
}

parse_conf() {
	echo $(smug list | $fuzzy_finder)
}

enter() {
	smug start $1 -a
}

# delete session
remove() {
	smug stop $1
}

# set -xv
set -eE

declare -A stat dir space
CONFDIR="$XDG_CONFIG_HOME/smug"

case $1 in
	'')
		ENTER=y
		;;
	-d)
		REMOVE=y
		;;
	-e)
		EDIT_CONF=y
		;;
	-h)
		usage 0
		;;
	*)
		usage 2
		;;
esac

init

session=$(parse_conf)
[[ -z "$session" ]] && exit 1

[[ "$EDIT_CONF" == y ]] && edit_conf "$session"

[[ "$ENTER" == y ]] && enter "$session"

[[ "$REMOVE" == y ]] && remove "$session"
